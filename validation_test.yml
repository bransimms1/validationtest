---
- name: Pull images, validate OpenShift DNS/ports, and curl endpoints
  hosts: all
  become: true

  vars_prompt:
    - name: openshift_api
      prompt: "Enter the OpenShift API hostname (e.g. api.cluster.example.com)"
      private: no

    - name: openshift_api_port
      prompt: "Enter the OpenShift API port (default 6443)"
      default: "6443"
      private: no

    - name: openshift_apps_host
      prompt: "Enter a sample hostname under your OpenShift apps wildcard (e.g. console.apps.cluster.example.com)"
      private: no

    - name: apps_port
      prompt: "Enter the apps host port to check (default 443)"
      default: "443"
      private: no

    - name: rh_username
      prompt: "Enter your Red Hat registry username"
      private: no

    - name: rh_password
      prompt: "Enter your Red Hat registry password"
      private: yes

    - name: idrac_host
      prompt: "Enter the iDRAC IP or hostname"
      private: no

    - name: registry_redhat_io_images
      prompt: "Enter comma-separated images from registry.redhat.io"
      private: no

    - name: registry_access_images
      prompt: "Enter comma-separated images from registry.access.redhat.com"
      private: no

    - name: quay_images
      prompt: "Enter comma-separated images from quay.io"
      private: no

  vars:
    console_redhat_url: "https://console.redhat.com/"
    idrac_response_file: "/tmp/idrac_response.json"
    console_response_file: "/tmp/console_redhat_response.html"

  tasks:
    # --- DNS validation ---
    - name: Check DNS resolution for OpenShift API
      command: "host {{ openshift_api }}"
      register: dns_api
      changed_when: false
      failed_when: dns_api.rc != 0

    - name: Show DNS result for OpenShift API
      debug:
        var: dns_api.stdout

    - name: Check DNS resolution for OpenShift apps wildcard (sample host)
      command: "host {{ openshift_apps_host }}"
      register: dns_apps
      changed_when: false
      failed_when: dns_apps.rc != 0

    - name: Show DNS result for OpenShift apps host
      debug:
        var: dns_apps.stdout

    # --- Port reachability checks ---
    - name: Check port {{ openshift_api_port }} on OpenShift API host
      wait_for:
        host: "{{ openshift_api }}"
        port: "{{ openshift_api_port }}"
        timeout: 5
        state: started

    - name: Check port {{ apps_port }} on OpenShift apps host
      wait_for:
        host: "{{ openshift_apps_host }}"
        port: "{{ apps_port }}"
        timeout: 5
        state: started

    # --- Ensure podman installed ---
    - name: Ensure podman is installed
      package:
        name: podman
        state: present

    # --- Log in to registries ---
    - name: Log in to registry.redhat.io
      containers.podman.podman_login:
        registry: registry.redhat.io
        username: "{{ rh_username }}"
        password: "{{ rh_password }}"

    - name: Log in to registry.access.redhat.com
      containers.podman.podman_login:
        registry: registry.access.redhat.com
        username: "{{ rh_username }}"
        password: "{{ rh_password }}"

    # --- Pull images ---
    - name: Pull images from registry.redhat.io
      containers.podman.podman_image:
        name: "registry.redhat.io/{{ item }}"
      loop: "{{ registry_redhat_io_images.split(',') | map('trim') | list }}"

    - name: Pull images from registry.access.redhat.com
      containers.podman.podman_image:
        name: "registry.access.redhat.com/{{ item }}"
      loop: "{{ registry_access_images.split(',') | map('trim') | list }}"

    - name: Pull images from quay.io
      containers.podman.podman_image:
        name: "quay.io/{{ item }}"
      loop: "{{ quay_images.split(',') | map('trim') | list }}"

    # --- Curl endpoints ---
    - name: Curl iDRAC interface
      uri:
        url: "https://{{ idrac_host }}/redfish/v1/Systems/System.Embedded.1"
        method: GET
        validate_certs: no
        return_content: yes
      register: idrac_response

    - name: Save iDRAC response to file
      copy:
        content: "{{ idrac_response.content }}"
        dest: "{{ idrac_response_file }}"

    - name: Print iDRAC HTTP status code
      debug:
        msg: "iDRAC at {{ idrac_host }} returned HTTP status {{ idrac_response.status }} and was saved to {{ idrac_response_file }}"

    - name: Curl console.redhat.com
      uri:
        url: "{{ console_redhat_url }}"
        method: GET
        return_content: yes
      register: console_response

    - name: Save console.redhat.com response to file
      copy:
        content: "{{ console_response.content }}"
        dest: "{{ console_response_file }}"

    - name: Print console.redhat.com HTTP status code
      debug:
        msg: "console.redhat.com returned HTTP status {{ console_response.status }} and was saved to {{ console_response_file }}"

    # --- Log out ---
    - name: Log out from registry.redhat.io
      containers.podman.podman_logout:
        registry: registry.redhat.io

    - name: Log out from registry.access.redhat.com
      containers.podman.podman_logout:
        registry: registry.access.redhat.com
